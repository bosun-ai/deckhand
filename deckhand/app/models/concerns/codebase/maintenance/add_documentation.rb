class Codebase::Maintenance::AddDocumentation < ApplicationAgent
  arguments :files

  def codebase
    context.codebase
  end

  def run
    branch_name = "add-documentation-#{SecureRandom.hex(8)}"
    ran = false
    codebase.new_branch(branch_name) do |status|
      if ran
        puts "Already ran!? #{status.inspect}"
      end
      if status == 0 && !ran
        ran = true
        puts "Going to add documentation to #{files.inspect}: #{status.inspect}"
        files.each do |file|
          next unless add_documentation_to_file(file)
          codebase.commit("Add automatically generated documentation to #{file}")
        end

        codebase.git_push(branch_name) do |status|
          if status == 0
            codebase.merge_request(title: "Add documentation", body: "This merge request was automatically generated by Bosun Deckhand.", branch_name: branch_name)
          else
            raise "Failed to push changes to #{codebase.name}: #{status.inspect}"
          end
        end
      end
    end
  end

  def add_documentation_to_file(file)
    file_content = File.read(File.join(codebase.path, file))

    prediction = run(WriteDocumentationAgent, file_content, context: context)

    if prediction.blank?
      return
    end

    File.write(File.join(codebase.path, file), prediction)
  end
end
