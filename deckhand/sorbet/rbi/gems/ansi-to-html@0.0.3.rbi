# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ansi-to-html` gem.
# Please instead update this file by running `bin/tapioca gem ansi-to-html`.

# changes:
# - \x1b[39m (and 49m) support
# - xterm256b(bgcolor for 256color) support
# - generate whole <html> with default fg/bg color (via `-f`,`-b`)
#
# source://ansi-to-html//lib/ansi/to/html/version.rb#1
module Ansi; end

# source://ansi-to-html//lib/ansi/to/html/version.rb#2
module Ansi::To; end

# source://ansi-to-html//lib/ansi/to/html/version.rb#3
class Ansi::To::Html
  # @return [Html] a new instance of Html
  #
  # source://ansi-to-html//lib/ansi/to/html.rb#62
  def initialize(input); end

  # @yield [buf]
  #
  # source://ansi-to-html//lib/ansi/to/html.rb#85
  def each; end

  # source://ansi-to-html//lib/ansi/to/html.rb#131
  def push_style(style); end

  # source://ansi-to-html//lib/ansi/to/html.rb#122
  def push_tag(tag, style = T.unsafe(nil)); end

  # source://ansi-to-html//lib/ansi/to/html.rb#135
  def reset_styles; end

  # source://ansi-to-html//lib/ansi/to/html.rb#74
  def to_html(pallete = T.unsafe(nil)); end

  # source://ansi-to-html//lib/ansi/to/html.rb#140
  def tokenize(text); end
end

# source://ansi-to-html//lib/ansi/to/html.rb#14
Ansi::To::Html::ESCAPE = T.let(T.unsafe(nil), String)

# source://ansi-to-html//lib/ansi/to/html.rb#33
Ansi::To::Html::PALLETE = T.let(T.unsafe(nil), Hash)

# source://ansi-to-html//lib/ansi/to/html.rb#32
Ansi::To::Html::STYLES = T.let(T.unsafe(nil), Hash)

# source://ansi-to-html//lib/ansi/to/html/version.rb#4
Ansi::To::Html::VERSION = T.let(T.unsafe(nil), String)
